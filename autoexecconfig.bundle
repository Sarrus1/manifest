{"meta":{"name":"AutoExecConfig","description":"An includefile to read and append to autoconfigs created by sourcemod","author":"Impact123"},"source":{"type":"git","merge":null,"repository":"https://github.com/Impact123/AutoExecConfig.git","endpoints":null,"patterns":["autoexecconfig.inc"]},"strands":{"autoexecconfig":{"functions":{"AutoExecConfig_GetCreateFile":{"name":"AutoExecConfig_GetCreateFile","refLine":103,"docStart":1764,"docEnd":1937,"docs":{"brief":"Returns if the config file should be created if it doesn't exist","tags":[{"tag":"","text":"Returns if the config file should be created if it doesn't exist"},{"tag":"return","text":"Returns true, if the config file should be created or false if it should not."}]},"metadata":{"created":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252},"last_updated":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252}},"kind":"stock","returnType":"bool","arguments":[]},"AutoExecConfig_GetPlugin":{"name":"AutoExecConfig_GetPlugin","refLine":128,"docStart":2424,"docEnd":2528,"docs":{"brief":"Returns the plugin for which the config file is created","tags":[{"tag":"","text":"Returns the plugin for which the config file is created"},{"tag":"return","text":"The plugin handle"}]},"metadata":{"created":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252},"last_updated":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252}},"kind":"stock","returnType":"Handle","arguments":[]},"AutoExecConfig_SetCreateDirectory":{"name":"AutoExecConfig_SetCreateDirectory","refLine":114,"docStart":2319,"docEnd":2715,"docs":{"brief":"Set if the config file's folder should be created by the autoexecconfig include itself if it doesn't exist.\nNote: Must be used before AutoExecConfig_SetFile as the potential creation of it happens there","tags":[{"tag":"","text":"Set if the config file's folder should be created by the autoexecconfig include itself if it doesn't exist.\nNote: Must be used before AutoExecConfig_SetFile as the potential creation of it happens there"},{"tag":"param:create","text":"True if config file should be created, false otherwise."},{"tag":"param:mode","text":"Folder permission mode, default is u=rwx,g=rx,o=rx."}]},"metadata":{"created":{"hash":"93b6ae56033bf21c53a81c9b206ee6af7dd79cf9","count":61,"time":1509672322},"last_updated":{"hash":"93b6ae56033bf21c53a81c9b206ee6af7dd79cf9","count":61,"time":1509672322}},"kind":"stock","returnType":"void","arguments":[{"type":"bool","name":"create","decl":"bool create","default":null},{"type":"int","name":"mode","decl":"int mode","default":"FPERM_U_READ | FPERM_U_WRITE | FPERM_U_EXEC | FPERM_G_READ | FPERM_G_EXEC | FPERM_O_READ | FPERM_O_EXEC"}]},"AutoExecConfig_GetFindResult":{"name":"AutoExecConfig_GetFindResult","refLine":58,"docStart":895,"docEnd":1021,"docs":{"brief":"Returns the last result from the parser","tags":[{"tag":"","text":"Returns the last result from the parser"},{"tag":"return","text":"Returns one of the AUTOEXEC_FIND values or -1 if not set"}]},"metadata":{"created":{"hash":"bc1b9bd07e9935f9de017b0204c00d5a733ce75a","count":6,"time":1356767555},"last_updated":{"hash":"bc1b9bd07e9935f9de017b0204c00d5a733ce75a","count":6,"time":1356767555}},"kind":"stock","returnType":"int","arguments":[]},"AutoExecConfig_SetPlugin":{"name":"AutoExecConfig_SetPlugin","refLine":117,"docStart":2016,"docEnd":2337,"docs":{"brief":"Set the plugin for which the config file should be created.\nSet to INVALID_HANDLE to use the calling plugin.\nUsed to print the correct filename in the top comment when creating the file.","tags":[{"tag":"","text":"Set the plugin for which the config file should be created.\nSet to INVALID_HANDLE to use the calling plugin.\nUsed to print the correct filename in the top comment when creating the file."},{"tag":"param:plugin","text":"The plugin to create convars for or INVALID_HANDLE to use the calling plugin"}]},"metadata":{"created":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252},"last_updated":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252}},"kind":"stock","returnType":"void","arguments":[{"type":"Handle","name":"plugin","decl":"Handle plugin","default":null}]},"GetSpacesInStr":{"name":"GetSpacesInStr","refLine":596,"docStart":12823,"docEnd":12972,"docs":{"brief":"Returns how much spaces are found within a given string","tags":[{"tag":"","text":"Returns how much spaces are found within a given string"},{"tag":"param:str","text":"String to search for in."},{"tag":"return","text":"Count of spaces found."}]},"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"6b3451dad2b83b35a651592b1808ca154bc8f210","count":18,"time":1356982663}},"kind":"static stock","returnType":"int","arguments":[{"type":"char[]","name":"str","decl":"char[] str","default":null}]},"AutoExecConfig_SetCreateFile":{"name":"AutoExecConfig_SetCreateFile","refLine":93,"docStart":1628,"docEnd":1799,"docs":{"brief":"Set if the config file should be created if it doesn't exist yet.","tags":[{"tag":"","text":"Set if the config file should be created if it doesn't exist yet."},{"tag":"param:create","text":"True if config file should be created, false otherwise."}]},"metadata":{"created":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252},"last_updated":{"hash":"5722ef81839714ce8894327d54d4732b4288e509","count":46,"time":1428433253}},"kind":"stock","returnType":"void","arguments":[{"type":"bool","name":"create","decl":"bool create","default":null}]},"AutoExecConfig_CacheConvars":{"name":"AutoExecConfig_CacheConvars","refLine":739,"docStart":16934,"docEnd":17147,"docs":{"brief":"Reads the existing config file and caches any convars and values that were found.","tags":[{"tag":"","text":"Reads the existing config file and caches any convars and values that were found."},{"tag":"param:str","text":"String to search for in."},{"tag":"return","text":"True when config existed and could be read, false otherwise."}]},"metadata":{"created":{"hash":"945edc0069ccae32d006a378962d4d1f8950a43d","count":50,"time":1438060664},"last_updated":{"hash":"945edc0069ccae32d006a378962d4d1f8950a43d","count":50,"time":1438060664}},"kind":"stock","returnType":"bool","arguments":[]},"AutoExecConfig_AppendValue":{"name":"AutoExecConfig_AppendValue","refLine":104,"docStart":2634,"docEnd":3411,"docs":{"brief":"Appends a convar to the global autoconfigfile","tags":[{"tag":"","text":"Appends a convar to the global autoconfigfile"},{"tag":"param:name","text":"Name of new convar."},{"tag":"param:defaultValue","text":"String containing the default value of new convar."},{"tag":"param:description","text":"Optional description of the convar."},{"tag":"param:flags","text":"Optional bitstring of flags determining how the convar should be handled. See FCVAR_* constants for more details."},{"tag":"param:hasMin","text":"Optional boolean that determines if the convar has a minimum value."},{"tag":"param:min","text":"Minimum floating point value that the convar can have if hasMin is true."},{"tag":"param:hasMax","text":"Optional boolean that determines if the convar has a maximum value."},{"tag":"param:max","text":"Maximum floating point value that the convar can have if hasMax is true."},{"tag":"return","text":"Returns one of the AUTOEXEC_APPEND values"}]},"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name","default":null},{"type":"const char[]","name":"defaultValue","decl":"const char[] defaultValue","default":null},{"type":"const char[]","name":"description","decl":"const char[] description","default":null},{"type":"int","name":"flags","decl":"int flags","default":null},{"type":"bool","name":"hasMin","decl":"bool hasMin","default":null},{"type":"float","name":"min","decl":"float min","default":null},{"type":"bool","name":"hasMax","decl":"bool hasMax","default":null},{"type":"float","name":"max","decl":"float max","default":null}]},"AutoExecConfig_CleanFile":{"name":"AutoExecConfig_CleanFile","refLine":438,"docStart":9819,"docEnd":9938,"docs":{"brief":"Cleans the global autoconfigfile from too much spaces","tags":[{"tag":"","text":"Cleans the global autoconfigfile from too much spaces"},{"tag":"return","text":"One of the AUTOEXEC_CLEAN values."}]},"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"1892c55b70277de12e8c48018044bf66ad7022d6","count":13,"time":1356781291}},"kind":"stock","returnType":"int","arguments":[]},"AutoExecConfig_GetAppendResult":{"name":"AutoExecConfig_GetAppendResult","refLine":71,"docStart":1103,"docEnd":1233,"docs":{"brief":"Returns the last result from the appender","tags":[{"tag":"","text":"Returns the last result from the appender"},{"tag":"return","text":"Returns one of the AUTOEXEC_APPEND values or -1 if not set"}]},"metadata":{"created":{"hash":"bc1b9bd07e9935f9de017b0204c00d5a733ce75a","count":6,"time":1356767555},"last_updated":{"hash":"bc1b9bd07e9935f9de017b0204c00d5a733ce75a","count":6,"time":1356767555}},"kind":"stock","returnType":"int","arguments":[]},"GetCharCountInStr":{"name":"GetCharCountInStr","refLine":618,"docStart":13703,"docEnd":13865,"docs":{"brief":"Returns how many times the given char occures in the given string.","tags":[{"tag":"","text":"Returns how many times the given char occures in the given string."},{"tag":"param:str","text":"String to search for in."},{"tag":"return","text":"Count of newlines found."}]},"metadata":{"created":{"hash":"2e506a1f634ed1766016983872748f197d8dbd32","count":29,"time":1375182652},"last_updated":{"hash":"2e506a1f634ed1766016983872748f197d8dbd32","count":29,"time":1375182652}},"kind":"static stock","returnType":"int","arguments":[{"type":"int","name":"character","decl":"int character","default":null},{"type":"const char[]","name":"str","decl":"const char[] str","default":null}]},"AutoExecConfig_ExecuteFile":{"name":"AutoExecConfig_ExecuteFile","refLine":242,"docStart":6020,"docEnd":6312,"docs":{"brief":"Executes the autoconfigfile, and adds it to the OnConfigsExecuted forward.\nIf we didn't created it already we let SourceMod create it.","tags":[{"tag":"","text":"Executes the autoconfigfile, and adds it to the OnConfigsExecuted forward.\nIf we didn't created it already we let SourceMod create it."},{"tag":"param:buffer","text":"String to format."},{"tag":"param:size","text":"Maximum size of buffer."},{"tag":"return","text":"Returns one of the AUTOEXEC_FORMAT values.."}]},"metadata":{"created":{"hash":"3b55da805925b290ba400195acd97675c3f60bda","count":35,"time":1375641979},"last_updated":{"hash":"3b55da805925b290ba400195acd97675c3f60bda","count":35,"time":1375641979}},"kind":"stock","returnType":"void","arguments":[]},"AutoExecConfig_FindValue":{"name":"AutoExecConfig_FindValue","refLine":213,"docStart":5407,"docEnd":5741,"docs":{"brief":"Returns a convars value from the global autoconfigfile","tags":[{"tag":"","text":"Returns a convars value from the global autoconfigfile"},{"tag":"param:cvar","text":"Cvar to search for."},{"tag":"param:value","text":"Buffer to store result into."},{"tag":"param:size","text":"Maximum size of buffer."},{"tag":"param:caseSensitive","text":"Whether or not the search hould be case sensitive."},{"tag":"return","text":"Returns one of the AUTOEXEC_FIND values"}]},"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"kind":"stock","returnType":"int","arguments":[{"type":"const char[]","name":"cvar","decl":"const char[] cvar","default":null},{"type":"char[]","name":"value","decl":"char[] value","default":null},{"type":"int","name":"size","decl":"int size","default":null},{"type":"bool","name":"caseSensitive","decl":"bool caseSensitive","default":"false"}]},"AutoExecConfig_CreateConVar":{"name":"AutoExecConfig_CreateConVar","refLine":202,"docStart":3992,"docEnd":4976,"docs":{"brief":"Creates a convar and appends it to the autoconfigfile if not found.\nFCVAR_DONTRECORD will be skipped.","tags":[{"tag":"","text":"Creates a convar and appends it to the autoconfigfile if not found.\nFCVAR_DONTRECORD will be skipped."},{"tag":"param:name","text":"Name of new convar."},{"tag":"param:defaultValue","text":"String containing the default value of new convar."},{"tag":"param:description","text":"Optional description of the convar."},{"tag":"param:flags","text":"Optional bitstring of flags determining how the convar should be handled. See FCVAR_* constants for more details."},{"tag":"param:hasMin","text":"Optional boolean that determines if the convar has a minimum value."},{"tag":"param:min","text":"Minimum floating point value that the convar can have if hasMin is true."},{"tag":"param:hasMax","text":"Optional boolean that determines if the convar has a maximum value."},{"tag":"param:max","text":"Maximum floating point value that the convar can have if hasMax is true."},{"tag":"return","text":"A handle to the newly created convar. If the convar already exists, a handle to it will still be returned."},{"tag":"error","text":"Convar name is blank or is the same as an existing console command."}]},"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"2372176eb3cf1d54e22dd1bb7fc6b2a85c194a08","count":45,"time":1428331283}},"kind":"stock","returnType":"ConVar","arguments":[{"type":"const char[]","name":"name","decl":"const char[] name","default":null},{"type":"const char[]","name":"defaultValue","decl":"const char[] defaultValue","default":null},{"type":"const char[]","name":"description","decl":"const char[] description","default":"\"\""},{"type":"int","name":"flags","decl":"int flags","default":"0"},{"type":"bool","name":"hasMin","decl":"bool hasMin","default":"false"},{"type":"float","name":"min","decl":"float min","default":"0.000000"},{"type":"bool","name":"hasMax","decl":"bool hasMax","default":"false"},{"type":"float","name":"max","decl":"float max","default":"0.000000"}]},"AutoExecConfig_GetFile":{"name":"AutoExecConfig_GetFile","refLine":167,"docStart":3525,"docEnd":3741,"docs":{"brief":"Get the formatted autoconfigfile used by functions of this file.","tags":[{"tag":"","text":"Get the formatted autoconfigfile used by functions of this file."},{"tag":"param:buffer","text":"String to format."},{"tag":"param:size","text":"Maximum size of buffer"},{"tag":"return","text":"True if filename was set, false otherwise."}]},"metadata":{"created":{"hash":"c7e19f7fb0e35409b4a061e1d6d71914d5a30a9d","count":9,"time":1356780141},"last_updated":{"hash":"2372176eb3cf1d54e22dd1bb7fc6b2a85c194a08","count":45,"time":1428331283}},"kind":"stock","returnType":"bool","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"size","decl":"int size","default":null}]},"GetQuotesInStr":{"name":"GetQuotesInStr","refLine":620,"docStart":13168,"docEnd":13317,"docs":{"brief":"Returns how much quotes are found within a given string","tags":[{"tag":"","text":"Returns how much quotes are found within a given string"},{"tag":"param:str","text":"String to search for in."},{"tag":"return","text":"Count of quotes found."}]},"metadata":{"created":{"hash":"6b3451dad2b83b35a651592b1808ca154bc8f210","count":18,"time":1356982663},"last_updated":{"hash":"6b3451dad2b83b35a651592b1808ca154bc8f210","count":18,"time":1356982663}},"kind":"static stock","returnType":"int","arguments":[{"type":"char[]","name":"str","decl":"char[] str","default":null}]},"AutoExecConfig_SetFile":{"name":"AutoExecConfig_SetFile","refLine":141,"docStart":2607,"docEnd":2925,"docs":{"brief":"Set the global autoconfigfile used by functions of this file","tags":[{"tag":"","text":"Set the global autoconfigfile used by functions of this file"},{"tag":"param:file","text":"Name of the config file, path and .cfg extension is being added if not given."},{"tag":"param:folder","text":"Folder under cfg/ to use.  By default this is \"sourcemod.\""},{"tag":"return","text":"True if formatter returned success, false otherwise."}]},"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"9706b2d7683d6d1b17c424069160cb415e064fdb","count":30,"time":1375622252}},"kind":"stock","returnType":"bool","arguments":[{"type":"char[]","name":"file","decl":"char[] file","default":null},{"type":"char[]","name":"folder","decl":"char[] folder","default":"\"sourcemod\""}]},"AutoExecConfig_FormatFileName":{"name":"AutoExecConfig_FormatFileName","refLine":186,"docStart":4350,"docEnd":4577,"docs":{"brief":"Formats a autoconfigfile, prefixes path and adds .cfg extension if missed","tags":[{"tag":"","text":"Formats a autoconfigfile, prefixes path and adds .cfg extension if missed"},{"tag":"param:buffer","text":"String to format."},{"tag":"param:size","text":"Maximum size of buffer."},{"tag":"return","text":"Returns one of the AUTOEXEC_FORMAT values.."}]},"metadata":{"created":{"hash":"c7e19f7fb0e35409b4a061e1d6d71914d5a30a9d","count":9,"time":1356780141},"last_updated":{"hash":"2226fa5d100d7e8816333174eb3672f93e9c07b2","count":26,"time":1358736506}},"kind":"static stock","returnType":"int","arguments":[{"type":"char[]","name":"buffer","decl":"char[] buffer","default":null},{"type":"int","name":"size","decl":"int size","default":null},{"type":"char[]","name":"folder","decl":"char[] folder","default":"\"sourcemod\""}]}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"AUTOEXEC_FIND_FILE_NOT_FOUND":{"name":"AUTOEXEC_FIND_FILE_NOT_FOUND","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":"11"},"AUTOEXEC_FIND_SUCCESS":{"name":"AUTOEXEC_FIND_SUCCESS","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":"14"},"AUTOEXEC_FIND_BAD_HANDLE":{"name":"AUTOEXEC_FIND_BAD_HANDLE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":"12"},"AUTOEXEC_CLEAN_BAD_HANDLE":{"name":"AUTOEXEC_CLEAN_BAD_HANDLE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"37b680989b4d35d7c4de0b4b8c5798f5736eb378","count":5,"time":1356755617},"last_updated":{"hash":"37b680989b4d35d7c4de0b4b8c5798f5736eb378","count":5,"time":1356755617}},"value":"21"},"AUTOEXEC_FORMAT_SUCCESS":{"name":"AUTOEXEC_FORMAT_SUCCESS","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"c7e19f7fb0e35409b4a061e1d6d71914d5a30a9d","count":9,"time":1356780141},"last_updated":{"hash":"c7e19f7fb0e35409b4a061e1d6d71914d5a30a9d","count":9,"time":1356780141}},"value":"41"},"AUTOEXEC_NO_CONFIG":{"name":"AUTOEXEC_NO_CONFIG","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"37b680989b4d35d7c4de0b4b8c5798f5736eb378","count":5,"time":1356755617}},"value":"30"},"_basics_clients_included":{"name":"_basics_clients_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":""},"AUTOEXEC_APPEND_SUCCESS":{"name":"AUTOEXEC_APPEND_SUCCESS","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"4051d553eae282f813810ff3aafe7721d316f675","count":4,"time":1356753767}},"value":"3"},"AUTOEXEC_APPEND_BAD_HANDLE":{"name":"AUTOEXEC_APPEND_BAD_HANDLE","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"4051d553eae282f813810ff3aafe7721d316f675","count":4,"time":1356753767}},"value":"2"},"AUTOEXEC_CLEAN_FILE_NOT_FOUND":{"name":"AUTOEXEC_CLEAN_FILE_NOT_FOUND","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"37b680989b4d35d7c4de0b4b8c5798f5736eb378","count":5,"time":1356755617},"last_updated":{"hash":"37b680989b4d35d7c4de0b4b8c5798f5736eb378","count":5,"time":1356755617}},"value":"20"},"AUTOEXEC_FIND_NOT_FOUND":{"name":"AUTOEXEC_FIND_NOT_FOUND","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":"13"},"AUTOEXEC_FORMAT_BAD_FILENAME":{"name":"AUTOEXEC_FORMAT_BAD_FILENAME","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"c7e19f7fb0e35409b4a061e1d6d71914d5a30a9d","count":9,"time":1356780141},"last_updated":{"hash":"c7e19f7fb0e35409b4a061e1d6d71914d5a30a9d","count":9,"time":1356780141}},"value":"40"},"AUTOEXEC_APPEND_BAD_FILENAME":{"name":"AUTOEXEC_APPEND_BAD_FILENAME","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":"0"},"AUTOEXEC_FIND_BAD_FILENAME":{"name":"AUTOEXEC_FIND_BAD_FILENAME","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":"10"},"AUTOEXECCONFIG_URL":{"name":"AUTOEXECCONFIG_URL","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"1f26f54c2a0ad67d59f79ba4141ee2fd11864e2e","count":59,"time":1500903985},"last_updated":{"hash":"1f26f54c2a0ad67d59f79ba4141ee2fd11864e2e","count":59,"time":1500903985}},"value":"\"https://forums.alliedmods.net/showthread.php?t=204254\""},"AUTOEXEC_CLEAN_SUCCESS":{"name":"AUTOEXEC_CLEAN_SUCCESS","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"37b680989b4d35d7c4de0b4b8c5798f5736eb378","count":5,"time":1356755617},"last_updated":{"hash":"c7e19f7fb0e35409b4a061e1d6d71914d5a30a9d","count":9,"time":1356780141}},"value":"22"},"AUTOEXEC_APPEND_FILE_NOT_FOUND":{"name":"AUTOEXEC_APPEND_FILE_NOT_FOUND","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905},"last_updated":{"hash":"b6ed0e0618fd7d7cdd03ebf3e3303dd8d7d24076","count":2,"time":1356750905}},"value":"1"},"_autoexecconfig_included":{"name":"_autoexecconfig_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"18d09f63ae08c14f280e32de2648aba097d2af4c","count":8,"time":1356768187},"last_updated":{"hash":"18d09f63ae08c14f280e32de2648aba097d2af4c","count":8,"time":1356768187}},"value":""},"AUTOEXEC_FORMAT_BAD_FOLDERNAME":{"name":"AUTOEXEC_FORMAT_BAD_FOLDERNAME","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"989ebb1adf5f4384fb7bc35f48c67ac0d3e31584","count":66,"time":1509675478},"last_updated":{"hash":"989ebb1adf5f4384fb7bc35f48c67ac0d3e31584","count":66,"time":1509675478}},"value":"42"},"AUTOEXECCONFIG_VERSION":{"name":"AUTOEXECCONFIG_VERSION","refLine":0,"docStart":0,"docEnd":0,"docs":null,"metadata":{"created":{"hash":"1f26f54c2a0ad67d59f79ba4141ee2fd11864e2e","count":59,"time":1500903985},"last_updated":{"hash":"b96f9e7acd288b91541679e143ecd591238e23ae","count":75,"time":1517264506}},"value":"\"0.1.5\""}},"enums":{},"typesets":{},"typedefs":{}}},"version":{"hash":"6abee2cb0324605e46f842efa24c4bcf472b7edc","count":79,"time":1577449717}}