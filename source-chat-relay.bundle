{"meta":{"name":"Source Chat Relay","description":"Communicate between Discord & In-Game, monitor server without being in-game, control the flow of messages and user base engagement!","author":"rumblefrog"},"source":{"type":"git","merge":null,"repository":"https://github.com/rumblefrog/source-chat-relay.git","endpoints":null,"patterns":["client/include/Source-Chat-Relay.inc"]},"strands":{"Source-Chat-Relay":{"functions":{"SCR_SendMessage":{"symbol":{"name":"SCR_SendMessage","refLine":65,"docStart":1824,"docEnd":2034,"docs":{"brief":"Sends a message to the router","tags":[{"tag":"","text":"Sends a message to the router"},{"tag":"param:iClient","text":"Client ID to use as name display (If left at 0, it will display \"CONSOLE\")"},{"tag":"param:fmt","text":"Format string"},{"tag":"param:...","text":"Format arguments"}]},"kind":"native","returnType":"void","arguments":[{"type":"int","name":"iClient","decl":"int iClient","default":"0"},{"type":"const char[]","name":"fmt","decl":"const char[] fmt","default":null},{"type":"any...","name":"...","decl":"any...","default":null}]},"created":{"hash":"f9dcd9c186db633991e0acac8f9bc9ff68749a4d","count":226,"time":1563481475},"last_updated":{"hash":"96ef2cd549fee1b102eaff6844ae475258cb1a81","count":311,"time":1564952968}},"__pl_Source_Chat_Relay_SetNTVOptional":{"symbol":{"name":"__pl_Source_Chat_Relay_SetNTVOptional","refLine":0,"docStart":0,"docEnd":0,"docs":null,"kind":"public","returnType":"void","arguments":[]},"created":{"hash":"f9dcd9c186db633991e0acac8f9bc9ff68749a4d","count":226,"time":1563481475},"last_updated":{"hash":"f9dcd9c186db633991e0acac8f9bc9ff68749a4d","count":226,"time":1563481475}},"SCR_OnMessageSend":{"symbol":{"name":"SCR_OnMessageSend","refLine":29,"docStart":374,"docEnd":676,"docs":{"brief":"Called upon sending a message via chat triggers","tags":[{"tag":"","text":"Called upon sending a message via chat triggers"},{"tag":"param:iClient","text":"Index of client that is sending the message"},{"tag":"param:sClientName","text":"Name of the client sending the message. The size of which is MAX_NAME_LENGTH"},{"tag":"param:sMessage","text":"Message content. The size of which is MAX_COMMAND_LENGTH"}]},"kind":"forward","returnType":"Action","arguments":[{"type":"int","name":"iClient","decl":"int iClient","default":null},{"type":"char[]","name":"sClientName","decl":"char[] sClientName","default":null},{"type":"char[]","name":"sMessage","decl":"char[] sMessage","default":null}]},"created":{"hash":"6bf17eb561a60bd54f44885d4eefb096f13b45e9","count":242,"time":1563858986},"last_updated":{"hash":"96ef2cd549fee1b102eaff6844ae475258cb1a81","count":311,"time":1564952968}},"SCR_OnMessageReceive":{"symbol":{"name":"SCR_OnMessageReceive","refLine":40,"docStart":762,"docEnd":1145,"docs":{"brief":"Called upon receiving a message","tags":[{"tag":"","text":"Called upon receiving a message"},{"tag":"param:sEntityName","text":"Entity name/hostname of the sending client"},{"tag":"param:iIDType","text":"The IdentificationType of the ID"},{"tag":"param:sID","text":"String variant of the ID"},{"tag":"param:sClientName","text":"Name of the client that sent the message. The size of which is MAX_NAME_LENGTH"},{"tag":"param:sMessage","text":"Message content. The size of which is MAX_COMMAND_LENGTH"}]},"kind":"forward","returnType":"Action","arguments":[{"type":"const char[]","name":"sEntityName","decl":"const char[] sEntityName","default":null},{"type":"IdentificationType","name":"iIDType","decl":"IdentificationType iIDType","default":null},{"type":"const char[]","name":"sID","decl":"const char[] sID","default":null},{"type":"char[]","name":"sClientName","decl":"char[] sClientName","default":null},{"type":"char[]","name":"sMessage","decl":"char[] sMessage","default":null}]},"created":{"hash":"6bf17eb561a60bd54f44885d4eefb096f13b45e9","count":242,"time":1563858986},"last_updated":{"hash":"96ef2cd549fee1b102eaff6844ae475258cb1a81","count":311,"time":1564952968}},"SCR_SendEvent":{"symbol":{"name":"SCR_SendEvent","refLine":74,"docStart":2109,"docEnd":2255,"docs":{"brief":"Sends an event to the router","tags":[{"tag":"","text":"Sends an event to the router"},{"tag":"param:sEvent","text":"Name of the event"},{"tag":"param:sData","text":"Data format string"},{"tag":"param:...","text":"Format arguments"}]},"kind":"native","returnType":"void","arguments":[{"type":"const char[]","name":"sEvent","decl":"const char[] sEvent","default":null},{"type":"const char[]","name":"sData","decl":"const char[] sData","default":null},{"type":"any...","name":"...","decl":"any...","default":null}]},"created":{"hash":"61f59c0eeb724dbe70baf1e4f4320b14f799cacd","count":258,"time":1564009186},"last_updated":{"hash":"96ef2cd549fee1b102eaff6844ae475258cb1a81","count":311,"time":1564952968}},"SCR_OnEventSend":{"symbol":{"name":"SCR_OnEventSend","refLine":48,"docStart":1293,"docEnd":1493,"docs":{"brief":"Called upon sending an event","tags":[{"tag":"","text":"Called upon sending an event"},{"tag":"param:sEvent","text":"Name of the event. The size of which is MAX_EVENT_NAME_LENGTH"},{"tag":"param:sData","text":"Data of the event. The size of which is MAX_COMMAND_LENGTH"}]},"kind":"forward","returnType":"Action","arguments":[{"type":"char[]","name":"sEvent","decl":"char[] sEvent","default":null},{"type":"char[]","name":"sData","decl":"char[] sData","default":null}]},"created":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312},"last_updated":{"hash":"96ef2cd549fee1b102eaff6844ae475258cb1a81","count":311,"time":1564952968}},"SCR_OnEventReceive":{"symbol":{"name":"SCR_OnEventReceive","refLine":56,"docStart":1556,"docEnd":1758,"docs":{"brief":"Called upon receiving an event","tags":[{"tag":"","text":"Called upon receiving an event"},{"tag":"param:sEvent","text":"Name of the event. The size of which is MAX_EVENT_NAME_LENGTH"},{"tag":"param:sData","text":"Data of the event. The size of which is MAX_COMMAND_LENGTH"}]},"kind":"forward","returnType":"Action","arguments":[{"type":"char[]","name":"sEvent","decl":"char[] sEvent","default":null},{"type":"char[]","name":"sData","decl":"char[] sData","default":null}]},"created":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312},"last_updated":{"hash":"96ef2cd549fee1b102eaff6844ae475258cb1a81","count":311,"time":1564952968}}},"methodmaps":{},"enumstructs":{},"constants":{},"defines":{"MAX_COMMAND_LENGTH":{"symbol":{"name":"MAX_COMMAND_LENGTH","refLine":0,"docStart":0,"docEnd":0,"docs":null,"value":"512"},"created":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312},"last_updated":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312}},"_Source_Chat_Relay_included":{"symbol":{"name":"_Source_Chat_Relay_included","refLine":0,"docStart":0,"docEnd":0,"docs":null,"value":""},"created":{"hash":"f9dcd9c186db633991e0acac8f9bc9ff68749a4d","count":226,"time":1563481475},"last_updated":{"hash":"f9dcd9c186db633991e0acac8f9bc9ff68749a4d","count":226,"time":1563481475}},"MAX_EVENT_NAME_LENGTH":{"symbol":{"name":"MAX_EVENT_NAME_LENGTH","refLine":0,"docStart":0,"docEnd":0,"docs":null,"value":"128"},"created":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312},"last_updated":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312}}},"enums":{"IdentificationType":{"symbol":{"name":"IdentificationType","refLine":0,"docStart":0,"docEnd":0,"docs":null,"entries":[{"name":"IdentificationInvalid","refLine":0,"docStart":0,"docEnd":0,"docs":null,"value":"0"},{"name":"IdentificationSteam","refLine":0,"docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"IdentificationDiscord","refLine":0,"docStart":0,"docEnd":0,"docs":null,"value":null},{"name":"IdentificationTypeCount","refLine":0,"docStart":0,"docEnd":0,"docs":null,"value":null}]},"created":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312},"last_updated":{"hash":"da6ab6282ee9afe4f244682818a361e1b4d02f65","count":310,"time":1564882312}}},"typesets":{},"typedefs":{}}},"version":{"hash":"96ef2cd549fee1b102eaff6844ae475258cb1a81","count":311,"time":1564952968}}